@inproceedings{Bader05,
    author = {Bader, David A. and Madduri, Kamesh},
    title = {Design and implementation of the HPCS graph analysis benchmark on symmetric multiprocessors},
    booktitle = {Proceedings of the 12th international conference on High Performance Computing},
    series = {HiPC'05},
    year = {2005},
    isbn = {3-540-30936-5, 978-3-540-30936-9},
    location = {Goa, India},
    pages = {465--476},
    numpages = {12},
    doi = {10.1007/11602569_48},
    acmid = {2099360},
    publisher = {Springer-Verlag},
    address = {Berlin, Heidelberg},
} 

@mastersthesis{BaldassinTese2009,
    author = {Alexandro José Baldassin},
    title  = {Explorando Mem\'{o}ria Transacional em Software nos Contextos de Arquiteturas Assim\'{e}tricas, Jogos Computacionais e Consumo de Energia},
    school = {Universidade Estadual de Campinas},
    year   = {2009},
    type   = {Disserta\c{c}\~{a}o de Doutorado}
}

@mastersthesis{BAND10,
    author = {Rafael de Le\~ao Bandeira},
    title  = {Compilador para a linguagem CMTJava},
    school = {Universidade Federal de Pelotas},
    year   = {2010},
    type = {Trabalho de Conclus\~{a}o de Curso (Bacharelado em Ci\^{e}ncia da Computa\c{c}\~{a}o)}
}

@book{Bezdek81,
    author = {Bezdek, James C.},
    title = {Pattern Recognition with Fuzzy Objective Function Algorithms},
    year = {1981},
    isbn = {0306406713},
    publisher = {Kluwer Academic Publishers},
    address = {Norwell, MA, USA},
} 

@inproceedings{blagodurov2010,
    Acmid = {1854350},
    Address = {New York, NY, USA},
    Author = {Blagodurov, Sergey and Zhuravlev, Sergey and Fedorova, Alexandra and Kamali, Ali},
    Booktitle = {Proceedings of the 19th International Conference on Parallel Architectures and Compilation Techniques},
    Doi = {10.1145/1854273.1854350},
    Isbn = {978-1-4503-0178-7},
    Keywords = {NUMA systems, multicore processors, scheduling, shared resource contention},
    Location = {Vienna, Austria},
    Numpages = {2},
    Pages = {557--558},
    Publisher = {ACM},
    Series = {PACT '10},
    Title = {A Case for NUMA-aware Contention Management on Multicore Systems},
    Url = {http://doi.acm.org/10.1145/1854273.1854350},
    Year = {2010},
}

@inproceedings{blake2009,
    Acmid = {1669133},
    Address = {New York, NY, USA},
    Author = {Blake, Geoffrey and Dreslinski, Ronald G. and Mudge, Trevor},
    Booktitle = {Proceedings of the 42Nd Annual IEEE/ACM International Symposium on Microarchitecture},
    Doi = {10.1145/1669112.1669133},
    Isbn = {978-1-60558-798-1},
    Keywords = {hardware transactional memory, proactive scheduling, software runtime},
    Location = {New York, New York},
    Numpages = {12},
    Pages = {156--167},
    Publisher = {ACM},
    Series = {MICRO 42},
    Title = {Proactive Transaction Scheduling for Contention Management},
    Url = {http://doi.acm.org/10.1145/1669112.1669133},
    Year = {2009},
}

@inproceedings{STAMP,
    Author = {Chi Cao Minh and JaeWoong Chung and C. Kozyrakis and K. Olukotun},
    Booktitle = {Workload Characterization, 2008. IISWC 2008. IEEE International Symposium on},
    Doi = {10.1109/IISWC.2008.4636089},
    Keywords = {multiprocessing systems;parallel programming;transaction processing;STAMP;Stanford transactional application;microbenchmark;multiprocessing;parallel programming;transactional execution;transactional memory;Application software;Concurrent computing;Hardware;Laboratories;Parallel programming;Programming profession;Proposals;Software systems;Stress;Yarn},
    Month = {Sept},
    Pages = {35-46},
    Title = {STAMP: Stanford Transactional Applications for Multi-Processing},
    Year = {2008},
}


@inproceedings{carissimi_2007,
  title={Aspectos de Programa{\c{c}}{\~a}o Paralela em M{\'a}quinas NUMA},
  author={Carissimi, AS and Dupros, Fabrice and M{\'e}haut, Jean-Fran{\c{c}}ois and Polanczyk, Rafael Vanoni},
  booktitle={Minicurso do Workshop em Sistemas Computacionais de Alto Desempenho},
  year={2007}
}

@INPROCEEDINGS{bayesian,
    author = {David Maxwell Chickering and David Heckerman and Christopher Meek},
    title = {A Bayesian approach to learning Bayesian networks with local structure},
    booktitle = {In Proceedings of Thirteenth Conference on Uncertainty in Artificial Intelligence},
    year = {1997},
    publisher = {Morgan Kaufmann}
}

@inproceedings{Costa:2016:erad,
    author = {Michael A. Costa and Felipe L. Teixeira and Maurício L. Pilla and André R. {Du Bois}},
    title = {Comparação das bibliotecas de {STM} {TinySTM} e {SwissTM}, com o benchmark {Lee-TM}},
    pages = {251-254},
    crossref = {erad:2016}
}
@proceedings{erad:2016,
    title = {XVI } # erad,
    booktitle = {Anais da XVI~} # erad,
    year = 2016,
    address = {São Leopoldo},
    month = {apr},
    issn = {2177-0085},
    pages = {370},
    day = {13-15},
    publisher = {SBC},
    _editor = {Rodrigo da Rosa Righi and Edson Luiz Padoin and Mozart Lemos Siqueira}
}

@inproceedings{tl2,
    author = "D. Dice and O. Shalev and N. Shavit", 
    title = "Transactional Locking {II}",
    booktitle = "DISC 2006", 
    site = "Stockholm, Sweden", 
    year = 2006, 
    pages = "194--208"
}

@inproceedings{carstm2008,
    Acmid = {1400769},
    Address = {New York, NY, USA},
    Author = {Dolev, Shlomi and Hendler, Danny and Suissa, Adi},
    Booktitle = {Proceedings of the Twenty-seventh ACM Symposium on Principles of Distributed Computing},
    Doi = {10.1145/1400751.1400769},
    Isbn = {978-1-59593-989-0},
    Keywords = {collision avoidance and reduction, contention management, scheduling, synchronization, transactional memory},
    Location = {Toronto, Canada},
    Numpages = {10},
    Pages = {125--134},
    Publisher = {ACM},
    Series = {PODC '08},
    Title = {CAR-STM: Scheduling-based Collision Avoidance and Resolution for Software Transactional Memory},
    Url = {http://doi.acm.org/10.1145/1400751.1400769},
    Year = {2008}
}

@inproceedings{shirink2009,
    Acmid = {1582725},
    Address = {New York, NY, USA},
    Author = {Dragojevi\'{c}, Aleksandar and Guerraoui, Rachid and Singh, Anmol V. and Singh, Vasu},
    Booktitle = {Proceedings of the 28th ACM Symposium on Principles of Distributed Computing},
    Doi = {10.1145/1582716.1582725},
    Isbn = {978-1-60558-396-9},
    Keywords = {contention management, scheduling, software transactional memory},
    Location = {Calgary, AB, Canada},
    Numpages = {10},
    Pages = {7--16},
    Publisher = {ACM},
    Series = {PODC '09},
    Title = {Preventing Versus Curing: Avoiding Conflicts in Transactional Memories},
    Url = {http://doi.acm.org/10.1145/1582716.1582725},
    Year = {2009},
}

@MastersThesis{Rodolfo:2014,
   author =       "Rodolfo Migon Favaretto",
   title =        "Escalonamento dinâmico em nível aplicativo sensível à arquitetura e às dependências de dados entre as tarefas",
   school =       "PPGC/UFPEL",
   year =         "2014",
   type =         "Dissertação de Mestrado",
   address =      "Pelotas/RS"
}

@inproceedings{TINY,
    Abstract = {The current generation of software transactional memories
has the advantage of being simple and efficient.
Nevertheless, there are several parameters that affect the performance
of a transactional memory, for example the locality of the application
and the cache line size of the processor. In this paper, we investigate
dynamic tuning mechanisms on a new time-based software transactional
memory implementation.  We study in extensive measurements the
performance of our implementation and exhibit the benefits of dynamic
tuning. We compare our results with TL2, which is currently one of the
fastest word-based software transactional memories.},
    Address = {New York, NY, USA},
    Author = {Pascal Felber and Christof Fetzer and Torvald Riegel},
    Booktitle = {PPoPP '08: Proc. of the 13th ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming},
    Doi = {10.1145/1345206.1345241},
    Isbn = {978-1-59593-795-7},
    Location = {Salt Lake City, UT, USA},
    Pages = {237--246},
    Publisher = {ACM},
    Title = {Dynamic Performance Tuning of Word-Based Software Transactional Memory},
    Year = {2008}
}

@inproceedings{gaudet2015,
    Author = {M. Gaudet and G. Ara{\'u}jo and J. N. Amaral},
    Booktitle = {Computer Architecture and High Performance Computing (SBAC-PAD), 2015 27th International Symposium on},
    Doi = {10.1109/SBAC-PAD.2015.11},
    Issn = {1550-6533},
    Keywords = {mainframes;parallel machines;storage management;BE-HTM system;Blue Gene/Q;best-effort hardware transactional memory;serialization management;serialization-manager parameters;Benchmark testing;Computer architecture;Hardware;Instruction sets;Runtime;Tuning;Transactional Memory;performance;serialization management;tuning},
    Month = {Oct},
    Pages = {138-145},
    Title = {Serialization Management for Best-Effort Hardware Transactional Memory},
    Year = {2015},
}


@inproceedings{Haagdorens05,
    abstract = {Signature-based Network Intrusion Detection System ({NIDS}) sensors match network packets against a pre-configured set of intrusion signatures. Current implementations of {NIDS} sensors employ only a single thread of execution and as a consequence benefit very little from multi-processor hardware platforms. A multi-threaded sensor would allow more efficient and scalable exploitation of these multi-processor machines. We present in detail a number of novel designs for a multi-threaded {NIDS} sensor and provide performance evaluation figures for a number of multi-threaded implementations of the popular open-source Snort system.},
    author = {Haagdorens, Bart and Vermeiren, Tim and Goossens, Marnix},
    booktitle = {Information Security Applications},
    journal = {Information Security Applications},
    pages = {188--203},
    priority = {0},
    series = {Lecture Notes in Computer Science (LNCS)},
    title = {Improving the Performance of {Signature-Based} Network Intrusion Detection Sensors by Multi-threading},
    url = {http://www.springerlink.com/content/95x0vuclyfdqp67l},
    volume = {3325},
    year = {2005}
}

@article{TM2010,
    author = {Harris ,  Tim  and  Larus ,  James  and  Rajwar ,  Ravi },
    title = {Transactional Memory, 2nd edition},
    journal = {Synthesis Lectures on Computer Architecture},
    volume = {5},
    number = {1},
    pages = {1-263},
    year = {2010},
    doi = {10.2200/S00272ED1V01Y201006CAC011},
    eprint = {http://www.morganclaypool.com/doi/pdf/10.2200/S00272ED1V01Y201006CAC011}
}

@inproceedings{herlihy93,
    author = {Maurice Herlihy and J. Eliot and B. Moss},
    title = {Transactional Memory: Architectural Support for Lock-Free Data Structures},
    booktitle = {in Proc. of the 20th Annual Intl. Symposium on Computer Architecture},
    year = {1993},
    pages = {289--300}
}

@MISC{Karp87,
    author = {Richard M. Karp and Michael O. Rabin},
    title = {Efficient randomized pattern-matching algorithms},
    year = {1987}
}

@inproceedings{Kulkarni06,
    address = {Ottawa, Canada},
    author = {Kulkarni, M. and Chew, L. P. and Pingali, K.},
    booktitle = {WTW'06: Proceedings of the Workshop on Transactional Memory Workloads},
    keywords = {delaunay, generation, mesh},
    month = {jun},
    pages = {23--31},
    priority = {2},
    series = {Held in conjunction with PLDI 2006},
    title = {Using Transactions in Delaunay Mesh Generation},
    year = {2006}
}

@ARTICLE{Lee61,
    Author = {C. Y. Lee},
    Doi = {10.1109/TEC.1961.5219222},
    Issn = {0367-9950},
    Journal = {IRE Transactions on Electronic Computers},
    Keywords = {Application software;Auditory system;Optical diffraction;Pattern recognition;Physical optics;Telephony;Transportation;Utility programs;Wiring},
    Month = {Sept},
    Number = {3},
    Pages = {346-365},
    Title = {An Algorithm for Path Connections and Its Applications},
    Volume = {EC-10},
    Year = {1961},
}
    

@inproceedings{mohamedin2016,
    Acmid = {2851189},
    Address = {New York, NY, USA},
    Articleno = {45},
    Author = {Mohamedin, Mohamed and Palmieri, Roberto and Peluso, Sebastiano and Ravindran, Binoy},
    Booktitle = {Proceedings of the 21st ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming},
    Doi = {10.1145/2851141.2851189},
    Isbn = {978-1-4503-4092-2},
    Keywords = {NUMA, scalability, transactional memory},
    Location = {Barcelona, Spain},
    Numpages = {2},
    Pages = {45:1--45:2},
    Publisher = {ACM},
    Series = {PPoPP '16},
    Title = {On Designing NUMA-aware Concurrency Control for Scalable Transactional Memory},
    Url = {http://doi.acm.org/10.1145/2851141.2851189},
    Year = {2016},
}

@ARTICLE{Moore97,
    author = {Andrew Moore and Mary Soon Lee},
    title = {Cached Sufficient Statistics for Efficient Machine Learning with Large Datasets},
    journal = {Journal of Artificial Intelligence Research},
    year = {1997},
    volume = {8},
    pages = {67--91}
}

@Inproceedings{energyawaretm,
    author = {Tali Moreshet and R. Iris Bahar and Maurice Herlihy},
    title = {Energy-Aware Microprocessor Synchronization: Transactional Memory vs. Locks },
    booktitle = {Proc. of the Workshop on Memory Performance Issues},
    year = {2006},
    month = {February}
}

@article{Nicacio2012,
author="Nic{\'a}cio, Daniel and Baldassin, Alexandro and Ara{\'u}jo, Guido",
title="Transaction Scheduling Using Dynamic Conflict Avoidance",
journal="International Journal of Parallel Programming",
year="2012",
volume="41",
number="1",
pages="89--110",
publisher = {Springer},
abstract="Software transaction memory (STM) systems have been used as an approach to improve performance, by allowing the concurrent execution of atomic blocks. However, under high-contention workloads, STM-based systems can considerably degrade performance, as transaction conflict rate increases. Contention management policies have been used as a way to select which transaction to abort when a conflict occurs. In general, contention managers are not capable of avoiding conflicts, as they can only select which transaction to abort and the moment it should restart. Since contention managers act only after a conflict is detected, it becomes harder to effectively increase transaction throughput. More proactive approaches have emerged, aiming at predicting when a transaction is likely to abort, postponing its execution. Nevertheless, most of the proposed proactive techniques are limited, as they do not replace the doomed transaction by another or, when they do, they rely on the operating system for that, having little or no control on which transaction to run. This article proposes LUTS, a lightweight user-level transaction scheduler. Unlike other techniques, LUTS provides the means for selecting another transaction to run in parallel, thus improving system throughput. We discuss LUTS design and propose a dynamic conflict-avoidance heuristic built around its scheduling capabilities. Experimental results, conducted with the STAMP and STMBench7 benchmark suites, running on TinySTM and SwissTM, show how our conflict-avoidance heuristic can effectively improve STM performance on high contention applications.",
issn="1573-7640",
doi="10.1007/s10766-012-0205-x",
url="http://dx.doi.org/10.1007/s10766-012-0205-x"
}

@article{Pilla_laercio2014,
title = "A topology-aware load balancing algorithm for clustered hierarchical multi-core machines ",
journal = "Future Generation Computer Systems ",
volume = "30",
number = "",
pages = "191 - 201",
year = "2014",
note = "Special Issue on Extreme Scale Parallel Architectures and Systems, Cryptography in Cloud Computing and Recent Advances in Parallel and Distributed Systems, \{ICPADS\} 2012 Selected Papers ",
issn = "0167-739X",
doi = "http://dx.doi.org/10.1016/j.future.2013.06.023",
url = "http://www.sciencedirect.com/science/article/pii/S0167739X13001374",
author = "Laércio L. Pilla and Christiane P. Ribeiro and Pierre Coucheney and François Broquedis and Bruno Gaujal and Philippe O.A. Navaux and Jean-François Méhaut",
keywords = "Load balancing",
keywords = "Hierarchical architectures",
keywords = "Hardware topology",
keywords = "Proof of optimality",
keywords = "Benchmarking ",
abstract = "Abstract In this paper, we present a topology-aware load balancing algorithm for parallel multi-core machines and its proof of asymptotic convergence to an optimal solution. The algorithm, named HwTopoLB, aims to improve the application performance by reducing core idleness and communication delays. HwTopoLB was designed taking into account the properties of current parallel systems composed of multi-core compute nodes, namely their network interconnection, and their complex and hierarchical core topology. The latter comprises multiple levels of cache, and a memory subsystem with \{NUMA\} design. These systems provide high processing power at the expense of asymmetric communication costs, which can hamper the performance of parallel applications depending on their communication patterns if ignored. Our load balancing algorithm models asymmetries in terms of latencies and bandwidths, representing the distances and communication costs among hardware components. We have implemented HwTopoLB using the Charm++ Parallel Runtime System and evaluated its performance with two different benchmarks and one application. Our experimental results with HwTopoLB exhibit scalability over clustered multi-core compute nodes, and average performance improvements of 23% over execution without load balancers and 19% over the existing load balancing strategies on different multi-core systems. "
}

@inproceedings{pilla_laercio2012,
    Author = {L. L. Pilla and P. O. A. Navaux and C. P. Ribeiro and P. Coucheney and F. Broquedis and B. Gaujal and J. F. M{\'e}haut},
    Booktitle = {Parallel and Distributed Systems (ICPADS), 2012 IEEE 18th International Conference on},
    Doi = {10.1109/ICPADS.2012.41},
    Issn = {1521-9097},
    Keywords = {multiprocessing systems;parallel machines;resource allocation;topology;CHARM++ Parallel System;NUMA design;asymptotically optimal load balancing;cache subsystem;hierarchical core topology;hierarchical multicore systems;high processing power;machine architecture;machine topology characteristics;memory subsystem;multicore machines;parallel application communication patterns;parallel machines;topology aware load balancing algorithm;Algorithm design and analysis;Benchmark testing;Libraries;Load management;Multicore processing;Runtime;Topology;algorithm;hierarchical architecture;load balancing;multi-core;performance evaluation},
    Month = {Dec},
    Pages = {236-243},
    Title = {Asymptotically Optimal Load Balancing for Hierarchical Multi-Core Systems},
    Year = {2012}
}

@MISC{Pisharath05,
    author = {Jayaprakash Pisharath and Ying Liu and Wei-keng Liao and Gokhan Memik and Alok Choudhary and Pradeep Dubey},
    title = {NU-MineBench: Understanding the Performance and Scalability Characteristics of Data Mining Algorithms},
    year = {2005}
}

@inproceedings{Riegel,
 author = {Riegel, Torvald and Fetzer, Christof and Felber, Pascal},
 title = {Time-based Transactional Memory with Scalable Time Bases},
 booktitle = {Proceedings of the Nineteenth Annual ACM Symposium on Parallel Algorithms and Architectures},
 series = {SPAA '07},
 year = {2007},
 isbn = {978-1-59593-667-7},
 location = {San Diego, California, USA},
 pages = {221--228},
 numpages = {8},
 url = {http://doi.acm.org/10.1145/1248377.1248415},
 doi = {10.1145/1248377.1248415},
 acmid = {1248415},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {transactional memory},
} 

@misc{rigotm,
  title = {Memorias Transacionais: Uma Nova Alternativa para Programação Concorrente},
  author={Rigo, Sandro and Centoducatte, Paulo and Baldassin, Alexandro},
  year={2007},
  publisher={In Proceedings of the 19th International Symposium on Computer Architecture and High Performance Computing},
}

@article{Ruppert95,
    author = {Ruppert, Jim},
    title = {A Delaunay refinement algorithm for quality 2-dimensional mesh generation},
    journal = {J. Algorithms},
    issue_date = {May 1995},
    volume = {18},
    number = {3},
    month = may,
    year = {1995},
    issn = {0196-6774},
    pages = {548--585},
    numpages = {38},
    url = {http://dx.doi.org/10.1006/jagm.1995.1021},
    doi = {10.1006/jagm.1995.1021},
    acmid = {203634},
    publisher = {Academic Press, Inc.},
    address = {Duluth, MN, USA},
} 

@MastersThesis{Teixeira:2015,
   author =       "Felipe Leivas Teixeira",
   title =        "Análise do Impacto de Diferentes Versionamentos de Dados das Memórias Transacionais sobre Memórias Phase-Change",
   school =       "PPGC/UFPEL",
   year =         "2015",
   type =         "Dissertação de Mestrado",
   address =      "Pelotas/RS"
}

@inproceedings{teixeira2014,
author={Teixeira, F.L. and Pilla, M.L. and Bois, A.R.D. and Mosse, D.},
booktitle={Computer Architecture and High Performance Computing (SBAC-PAD), 2014 IEEE 26th Intl. Symp. on},
title={Profiling Patterns of Bit Flipping for Software Transactional Memories},
year={2014},
pages={136-143},
doi={10.1109/SBAC-PAD.2014.51},
ISSN={1550-6533},
month={Oct}
}

@article{wang2012,
  title={Aware conflict detection of non-uniform memory access system and prevention for transactional memory},
  author={Wang, Rui-bo and Lu, Kai and Lu, Xi-cheng},
  journal={Journal of Central South University},
  volume={19},
  pages={2266--2271},
  year={2012},
  publisher={Springer}
}

@inproceedings{ats2008,
  title={Adaptive transaction scheduling for transactional memory systems},
  author={Yoo, Richard M and Lee, Hsien-Hsin S},
  booktitle={Proceedings of the twentieth annual symposium on Parallelism in algorithms and architectures},
  pages={169--178},
  year={2008},
  organization={ACM}
}

@article{rito2015,
    title = {Adaptive transaction scheduling for mixed transactional workloads},
    journal = {Parallel Computing},
    volume = {41},
    pages = {31-49},
    year = {2015},
    issn = {0167-8191},
    doi = {https://doi.org/10.1016/j.parco.2014.11.001},
    author = {Hugo Rito and João Cachopo},
    keywords = {Software Transactional Memory, Transaction conflict, Transaction scheduling},
    abstract = {Transaction schedulers reduce the number of transaction reexecutions in applications using Software Transactional Memory (STM) by preventing conflicting transactions to run in parallel. Unfortunately, current scheduling solutions are too conservative, rely on coarse measures to serialize transactions, and are specially inadequate for workloads with long transactions. In this paper we introduce an optimistic and adaptive transaction scheduler that takes advantage of the information already collected by the STM runtime to increase parallelism between transactions and, thus, improve transactions’ throughput. Our new ProVIT scheduler implements a low-overhead scheduling policy for short transactions that reduces concurrency as contention increases and a fine-grained scheduling policy for long transactions based on the novel concept of Very Important Transaction. Experimental results conducted with the STMBench7 benchmark and the STAMP benchmark suite showed that the ProVIT scheduler has comparable performance to other current scheduling solutions for short transactions, but is up to 65% faster for long-running transactions.}
}

@inproceedings{pasqualin2020online,
  title={Online Sharing-Aware Thread Mapping in Software Transactional Memory},
  author={Pasqualin, Douglas Pereira and Diener, Matthias and Du Bois, Andr{\'e} Rauber and Pilla, Maur{\'\i}cio Lima},
  booktitle={2020 IEEE 32nd International Symposium on Computer Architecture and High Performance Computing (SBAC-PAD)},
  pages={35--42},
  year={2020},
  organization={IEEE}
}

@inproceedings{pasqualin2020thread,
  title={Thread affinity in software transactional memory},
  author={Pasqualin, Douglas Pereira and Diener, Matthias and Du Bois, Andr{\'e} Rauber and Pilla, Maur{\'\i}cio Lima},
  booktitle={2020 19th International Symposium on Parallel and Distributed Computing (ISPDC)},
  pages={180--187},
  year={2020},
  organization={IEEE}
}

@article{disanzo2017,
  title={Analysis, classification and comparison of scheduling techniques for software transactional memories},
  author={Di Sanzo, Pierangelo},
  journal={IEEE Transactions on Parallel and Distributed Systems},
  volume={28},
  number={12},
  pages={3356--3373},
  year={2017},
  publisher={IEEE}
}

@Article{Calciu:2017,
  author     = {Calciu, Irina and Sen, Siddhartha and Balakrishnan, Mahesh and Aguilera, Marcos K.},
  journal    = {SIGOPS Oper. Syst. Rev.},
  title      = {How to Implement Any Concurrent Data Structure for Modern Servers},
  year       = {2017},
  issn       = {0163-5980},
  month      = sep,
  number     = {1},
  pages      = {24–32},
  volume     = {51},
  address    = {New York, NY, USA},
  doi        = {10.1145/3139645.3139650},
  issue_date = {August 2017},
  numpages   = {9},
  publisher  = {Association for Computing Machinery},
}

@Unpublished{Ruan:2014,
  author = {Wenjia Ruan and Yujie Liu and Michael Spear},
  note   = {9th ACM SIGPLAN Workshop on Transactional Computing (TRANSACT 2014). co-located with ASPLOS 2014. \url{http://transact2014.cse.lehigh.edu/ruan.pdf}},
  title  = {{STAMP} Need Not Be Considered Harmful},
  month  = {March},
  year   = {2014},
}
